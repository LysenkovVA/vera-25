// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Пользователи
model User {
  id       String @id @default(cuid())
  login    String @unique
  password String

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@map(name: "users")
}

// Роли
model Role {
  id    String @id @default(cuid())
  name  String @unique
  users User[]

  @@map(name: "roles")
}

// Уровень защищенности
model SecurityLevel {
  id   String @id @default(cuid())
  name String @unique

  @@map(name: "security_levels")
}

// Страна
model Country {
  id   String @id @default(cuid())
  name String @unique

  @@map(name: "countries")
}

// Производитель
model Manufacturer {
  id   String @id @default(cuid())
  name String @unique

  @@map(name: "manufacturers")
}

// НПА с требованиями
model Document {
  id        String   @id @default(cuid())
  name      String
  number    String
  date      DateTime
  startDate DateTime
  endDate   DateTime
  notes     String

  requirementGroups RequirementGroup[]

  @@map(name: "documents")
}

// Группа требований НПА
model RequirementGroup {
  id       String @id @default(cuid())
  name     String
  position Int
  notes    String

  requirements Requirement[]

  document   Document @relation(fields: [documentId], references: [id])
  documentId String

  @@map(name: "requirement_groups")
}

// Конкретное требование НПА
model Requirement {
  id       String @id @default(cuid())
  name     String
  position Int
  notes    String

  requirementGroup   RequirementGroup @relation(fields: [requirementGroupId], references: [id])
  requirementGroupId String

  @@map(name: "requirements")
}
